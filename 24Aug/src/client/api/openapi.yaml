openapi: 3.0.0
info:
  contact:
    email: apiteam@swagger.io
    name: Swagger API Team
    url: http://swagger.io
  description: A sample API that uses a petstore as an example to demonstrate features
    in the OpenAPI 3.0 specification
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Petstore
  version: 1.0.0
servers:
- url: http://petstore.swagger.io/v2
paths:
  /pet:
    get:
      description: "Returns all pets from the system that the user has access to\n\
        Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem\
        \ sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio\
        \ lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar\
        \ ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer\
        \ at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie\
        \ imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend\
        \ sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris.\
        \ In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales\
        \ sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel,\
        \ vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.\n\n\
        Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum\
        \ ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis\
        \ elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut\
        \ pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula\
        \ libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec\
        \ scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis\
        \ felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem,\
        \ molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut\
        \ lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium,\
        \ pulvinar elit eu, euismod sapien.\n"
      operationId: findPets
      parameters:
      - description: tags to filter by
        explode: true
        in: query
        name: tags
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Pet'
                type: array
          description: pet response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      x-accepts: application/json
    post:
      description: Creates a new pet in the store. Duplicates are allowed
      operationId: addPet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPet'
        description: Pet to add to the store
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
          description: pet response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      x-content-type: application/json
      x-accepts: application/json
  /pet/{id}:
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
      - description: ID of pet to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: pet deleted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      x-accepts: application/json
    get:
      description: "Returns a user based on a single ID, if the user does not have\
        \ access to the pet"
      operationId: find pet by id
      parameters:
      - description: ID of pet to fetch
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
          description: pet response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      x-accepts: application/json
components:
  schemas:
    Pet:
      allOf:
      - $ref: '#/components/schemas/NewPet'
      - $ref: '#/components/schemas/Pet_allOf'
    NewPet:
      example:
        name: name
        tag: tag
      properties:
        name:
          type: string
        tag:
          type: string
      required:
      - name
      type: object
    Error:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
      required:
      - code
      - message
      type: object
    Pet_allOf:
      properties:
        id:
          format: int64
          type: integer
      required:
      - id
      type: object

